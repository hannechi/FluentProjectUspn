{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport * as Editor from 'ckeditor5-41.0.0-hx9ric8903g3/build/ckeditor';\nimport { Wiki } from 'src/app/models/Wiki';\nimport Swal from 'sweetalert2';\nlet AllModificationWikiComponent = class AllModificationWikiComponent {\n  constructor(servicewiki, datePipe) {\n    this.servicewiki = servicewiki;\n    this.datePipe = datePipe;\n    this.CustomEditor = Editor;\n    this.datawiki = \"\";\n  }\n  getFormattedDate() {\n    const currentDate = new Date();\n    // Format the date as per your requirement\n    return this.datePipe.transform(currentDate, 'yyyy-MM-ddTHH:mm:ss.SSSZ');\n  }\n  ngOnInit() {\n    this.servicewiki.getdernierversionwiki().subscribe({\n      next: data => {\n        this.datawiki = this.servicewiki.decode(data[\"contenu\"]);\n      },\n      error: errr => {\n        Swal.fire({\n          position: \"top-end\",\n          icon: \"error\",\n          title: \"Something went wrong! try later\",\n          showConfirmButton: false,\n          timer: 1500\n        });\n      }\n    });\n  }\n  saveversionwiki(message) {\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"This version of the wiki will be saved !\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes, save it!\"\n    }).then(result => {\n      if (result.isConfirmed) {\n        this.formattedDate = this.getFormattedDate();\n        let wikiversion = new Wiki(0, this.servicewiki.encode(this.datawiki), this.formattedDate);\n        this.servicewiki.savewikiversion(wikiversion).subscribe({\n          next: data => {\n            Swal.fire({\n              title: \"Saved!\",\n              text: \"Your file has been saved.\",\n              icon: \"success\"\n            });\n          },\n          error: errr => {\n            Swal.fire({\n              position: \"top-end\",\n              icon: \"error\",\n              title: \"Something went wrong! try later\",\n              showConfirmButton: false,\n              timer: 1500\n            });\n          }\n        });\n      }\n    });\n  }\n};\nAllModificationWikiComponent = __decorate([Component({\n  selector: 'app-all-modification-wiki',\n  templateUrl: './all-modification-wiki.component.html',\n  styleUrls: ['./all-modification-wiki.component.css']\n})], AllModificationWikiComponent);\nexport { AllModificationWikiComponent };","map":{"version":3,"names":["Component","Editor","Wiki","Swal","AllModificationWikiComponent","constructor","servicewiki","datePipe","CustomEditor","datawiki","getFormattedDate","currentDate","Date","transform","ngOnInit","getdernierversionwiki","subscribe","next","data","decode","error","errr","fire","position","icon","title","showConfirmButton","timer","saveversionwiki","message","text","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","isConfirmed","formattedDate","wikiversion","encode","savewikiversion","__decorate","selector","templateUrl","styleUrls"],"sources":["/home/hannechi/Bureau/uspn_cfd/frontAppUspn/src/app/wiki/all-modification-wiki/all-modification-wiki.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport * as Editor from 'ckeditor5-41.0.0-hx9ric8903g3/build/ckeditor';\nimport { Wiki } from 'src/app/models/Wiki';\nimport { WikiService } from 'src/app/service/wiki.service';\nimport Swal from 'sweetalert2'\nimport { DatePipe } from '@angular/common';\n\n@Component({\n  selector: 'app-all-modification-wiki',\n  templateUrl: './all-modification-wiki.component.html',\n  styleUrls: ['./all-modification-wiki.component.css']\n})\nexport class AllModificationWikiComponent implements OnInit{\n  public CustomEditor : any = Editor;\n  datawiki=\"\";\n  formattedDate: any;\n\n\n  constructor(private servicewiki : WikiService,private datePipe: DatePipe)\n  {\n   \n  }\n\n\n  getFormattedDate(){\n    const currentDate = new Date();\n    // Format the date as per your requirement\n    \n    return this.datePipe.transform(currentDate, 'yyyy-MM-ddTHH:mm:ss.SSSZ');\n  }\n ngOnInit(): void {\n\n    this.servicewiki.getdernierversionwiki().subscribe\n    (\n      {\n        next: (data)=>\n        {\n            this.datawiki = this.servicewiki.decode(data[\"contenu\"]);     \n        },\n        error: (errr)=>\n        {\n          Swal.fire({\n            position: \"top-end\",\n            icon: \"error\",\n            title: \"Something went wrong! try later\",\n            showConfirmButton: false,\n            timer: 1500\n          });\n        }\n      }\n    )\n\n }\n\n saveversionwiki(message:any)\n {\n  Swal.fire({\n    title: \"Are you sure?\",\n    text: \"This version of the wiki will be saved !\",\n    icon: \"warning\",\n    showCancelButton: true,\n    confirmButtonColor: \"#3085d6\",\n    cancelButtonColor: \"#d33\",\n    confirmButtonText: \"Yes, save it!\"\n  }).then((result) => {\n    if (result.isConfirmed) {\n      this.formattedDate = this.getFormattedDate();\n      let wikiversion = new Wiki(0,this.servicewiki.encode(this.datawiki),this.formattedDate);\n      this.servicewiki.savewikiversion(wikiversion).subscribe(\n        {\n          next: (data)=>\n          {\n            Swal.fire({\n              title: \"Saved!\",\n              text: \"Your file has been saved.\",\n              icon: \"success\"\n            });    \n          },\n          error: (errr)=>\n          {\n            Swal.fire({\n              position: \"top-end\",\n              icon: \"error\",\n              title: \"Something went wrong! try later\",\n              showConfirmButton: false,\n              timer: 1500\n            });\n          }\n        }\n      )\n      \n    }\n  });\n   \n }  \n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AACjD,OAAO,KAAKC,MAAM,MAAM,8CAA8C;AACtE,SAASC,IAAI,QAAQ,qBAAqB;AAE1C,OAAOC,IAAI,MAAM,aAAa;AAQ9B,IAAaC,4BAA4B,GAAzC,MAAaA,4BAA4B;EAMvCC,YAAoBC,WAAyB,EAASC,QAAkB;IAApD,KAAAD,WAAW,GAAXA,WAAW;IAAuB,KAAAC,QAAQ,GAARA,QAAQ;IALvD,KAAAC,YAAY,GAASP,MAAM;IAClC,KAAAQ,QAAQ,GAAC,EAAE;EAOX;EAGAC,gBAAgBA,CAAA;IACd,MAAMC,WAAW,GAAG,IAAIC,IAAI,EAAE;IAC9B;IAEA,OAAO,IAAI,CAACL,QAAQ,CAACM,SAAS,CAACF,WAAW,EAAE,0BAA0B,CAAC;EACzE;EACDG,QAAQA,CAAA;IAEL,IAAI,CAACR,WAAW,CAACS,qBAAqB,EAAE,CAACC,SAAS,CAEhD;MACEC,IAAI,EAAGC,IAAI,IAAG;QAEV,IAAI,CAACT,QAAQ,GAAG,IAAI,CAACH,WAAW,CAACa,MAAM,CAACD,IAAI,CAAC,SAAS,CAAC,CAAC;MAC5D,CAAC;MACDE,KAAK,EAAGC,IAAI,IAAG;QAEblB,IAAI,CAACmB,IAAI,CAAC;UACRC,QAAQ,EAAE,SAAS;UACnBC,IAAI,EAAE,OAAO;UACbC,KAAK,EAAE,iCAAiC;UACxCC,iBAAiB,EAAE,KAAK;UACxBC,KAAK,EAAE;SACR,CAAC;MACJ;KACD,CACF;EAEJ;EAEAC,eAAeA,CAACC,OAAW;IAE1B1B,IAAI,CAACmB,IAAI,CAAC;MACRG,KAAK,EAAE,eAAe;MACtBK,IAAI,EAAE,0CAA0C;MAChDN,IAAI,EAAE,SAAS;MACfO,gBAAgB,EAAE,IAAI;MACtBC,kBAAkB,EAAE,SAAS;MAC7BC,iBAAiB,EAAE,MAAM;MACzBC,iBAAiB,EAAE;KACpB,CAAC,CAACC,IAAI,CAAEC,MAAM,IAAI;MACjB,IAAIA,MAAM,CAACC,WAAW,EAAE;QACtB,IAAI,CAACC,aAAa,GAAG,IAAI,CAAC5B,gBAAgB,EAAE;QAC5C,IAAI6B,WAAW,GAAG,IAAIrC,IAAI,CAAC,CAAC,EAAC,IAAI,CAACI,WAAW,CAACkC,MAAM,CAAC,IAAI,CAAC/B,QAAQ,CAAC,EAAC,IAAI,CAAC6B,aAAa,CAAC;QACvF,IAAI,CAAChC,WAAW,CAACmC,eAAe,CAACF,WAAW,CAAC,CAACvB,SAAS,CACrD;UACEC,IAAI,EAAGC,IAAI,IAAG;YAEZf,IAAI,CAACmB,IAAI,CAAC;cACRG,KAAK,EAAE,QAAQ;cACfK,IAAI,EAAE,2BAA2B;cACjCN,IAAI,EAAE;aACP,CAAC;UACJ,CAAC;UACDJ,KAAK,EAAGC,IAAI,IAAG;YAEblB,IAAI,CAACmB,IAAI,CAAC;cACRC,QAAQ,EAAE,SAAS;cACnBC,IAAI,EAAE,OAAO;cACbC,KAAK,EAAE,iCAAiC;cACxCC,iBAAiB,EAAE,KAAK;cACxBC,KAAK,EAAE;aACR,CAAC;UACJ;SACD,CACF;;IAGL,CAAC,CAAC;EAEH;CACA;AAnFYvB,4BAA4B,GAAAsC,UAAA,EALxC1C,SAAS,CAAC;EACT2C,QAAQ,EAAE,2BAA2B;EACrCC,WAAW,EAAE,wCAAwC;EACrDC,SAAS,EAAE,CAAC,uCAAuC;CACpD,CAAC,C,EACWzC,4BAA4B,CAmFxC;SAnFYA,4BAA4B"},"metadata":{},"sourceType":"module","externalDependencies":[]}
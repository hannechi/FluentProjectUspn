{"ast":null,"code":"import * as Editor from 'ckeditor5-41.0.0-hx9ric8903g3/build/ckeditor';\nimport { Wiki } from 'src/app/models/Wiki';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/wiki.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@ckeditor/ckeditor5-angular\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"../../vitrine/navbar/navbar.component\";\nclass AllModificationWikiComponent {\n  constructor(servicewiki, datePipe) {\n    this.servicewiki = servicewiki;\n    this.datePipe = datePipe;\n    this.CustomEditor = Editor;\n    this.datawiki = \"\";\n  }\n  getFormattedDate() {\n    const currentDate = new Date();\n    // Format the date as per your requirement\n    return this.datePipe.transform(currentDate, 'yyyy-MM-ddTHH:mm:ss.SSSZ');\n  }\n  ngOnInit() {\n    this.servicewiki.getdernierversionwiki().subscribe({\n      next: data => {\n        this.datawiki = this.servicewiki.decode(data[\"contenu\"]);\n      },\n      error: errr => {\n        console.log(errr);\n      }\n    });\n  }\n  saveversionwiki(message) {\n    this.formattedDate = this.getFormattedDate();\n    let wikiversion = new Wiki(0, this.servicewiki.encode(this.datawiki), formattedDate);\n  }\n  static #_ = this.ɵfac = function AllModificationWikiComponent_Factory(t) {\n    return new (t || AllModificationWikiComponent)(i0.ɵɵdirectiveInject(i1.WikiService), i0.ɵɵdirectiveInject(i2.DatePipe));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AllModificationWikiComponent,\n    selectors: [[\"app-all-modification-wiki\"]],\n    decls: 3,\n    vars: 5,\n    consts: [[3, \"modificationwiki\", \"login\", \"vitrine\", \"saveversionwikinow\"], [\"data-wow-duration\", \"0.75s\", \"data-wow-delay\", \"0s\", 1, \"header-area\", \"header-sticky\", \"wow\", \"slideInDown\"], [3, \"editor\", \"ngModel\", \"ngModelChange\"]],\n    template: function AllModificationWikiComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"app-navbar\", 0);\n        i0.ɵɵlistener(\"saveversionwikinow\", function AllModificationWikiComponent_Template_app_navbar_saveversionwikinow_0_listener($event) {\n          return ctx.saveversionwiki($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(1, \"div\", 1)(2, \"ckeditor\", 2);\n        i0.ɵɵlistener(\"ngModelChange\", function AllModificationWikiComponent_Template_ckeditor_ngModelChange_2_listener($event) {\n          return ctx.datawiki = $event;\n        });\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"modificationwiki\", true)(\"login\", false)(\"vitrine\", false);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"editor\", ctx.CustomEditor)(\"ngModel\", ctx.datawiki);\n      }\n    },\n    dependencies: [i3.CKEditorComponent, i4.NgControlStatus, i4.NgModel, i5.NavbarComponent],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}\nexport { AllModificationWikiComponent };","map":{"version":3,"names":["Editor","Wiki","AllModificationWikiComponent","constructor","servicewiki","datePipe","CustomEditor","datawiki","getFormattedDate","currentDate","Date","transform","ngOnInit","getdernierversionwiki","subscribe","next","data","decode","error","errr","console","log","saveversionwiki","message","formattedDate","wikiversion","encode","_","i0","ɵɵdirectiveInject","i1","WikiService","i2","DatePipe","_2","selectors","decls","vars","consts","template","AllModificationWikiComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","AllModificationWikiComponent_Template_app_navbar_saveversionwikinow_0_listener","$event","ɵɵelementEnd","AllModificationWikiComponent_Template_ckeditor_ngModelChange_2_listener","ɵɵproperty","ɵɵadvance"],"sources":["/home/hannechi/Bureau/uspn_cfd/frontAppUspn/src/app/wiki/all-modification-wiki/all-modification-wiki.component.ts","/home/hannechi/Bureau/uspn_cfd/frontAppUspn/src/app/wiki/all-modification-wiki/all-modification-wiki.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport * as Editor from 'ckeditor5-41.0.0-hx9ric8903g3/build/ckeditor';\nimport { Wiki } from 'src/app/models/Wiki';\nimport { WikiService } from 'src/app/service/wiki.service';\nimport Swal from 'sweetalert2'\nimport { DatePipe } from '@angular/common';\n\n@Component({\n  selector: 'app-all-modification-wiki',\n  templateUrl: './all-modification-wiki.component.html',\n  styleUrls: ['./all-modification-wiki.component.css']\n})\nexport class AllModificationWikiComponent implements OnInit{\n  public CustomEditor : any = Editor;\n  datawiki=\"\";\n  formattedDate: any;\n\n\n  constructor(private servicewiki : WikiService,private datePipe: DatePipe)\n  {\n   \n  }\n\n\n  getFormattedDate(){\n    const currentDate = new Date();\n    // Format the date as per your requirement\n    \n    return this.datePipe.transform(currentDate, 'yyyy-MM-ddTHH:mm:ss.SSSZ');\n  }\n ngOnInit(): void {\n\n    this.servicewiki.getdernierversionwiki().subscribe\n    (\n      {\n        next: (data)=>\n        {\n            this.datawiki = this.servicewiki.decode(data[\"contenu\"]);     \n        },\n        error: (errr)=>\n        {\n            console.log(errr)\n        }\n      }\n    )\n\n }\n saveversionwiki(message:any)\n {\n    this.formattedDate = this.getFormattedDate();\n    let wikiversion = new Wiki(0,this.servicewiki.encode(this.datawiki),formattedDate\n }\n}\n","    <app-navbar (saveversionwikinow)=\"saveversionwiki($event)\" [modificationwiki]=\"true\" [login]=\"false\" [vitrine]=\"false\"></app-navbar>\n    <div class=\"header-area header-sticky wow slideInDown\" data-wow-duration=\"0.75s\" data-wow-delay=\"0s\">\n    <ckeditor  [editor]=\"CustomEditor\" [(ngModel)]=\"datawiki\"></ckeditor>\n    </div>"],"mappings":"AACA,OAAO,KAAKA,MAAM,MAAM,8CAA8C;AACtE,SAASC,IAAI,QAAQ,qBAAqB;;;;;;;AAK1C,MAKaC,4BAA4B;EAMvCC,YAAoBC,WAAyB,EAASC,QAAkB;IAApD,KAAAD,WAAW,GAAXA,WAAW;IAAuB,KAAAC,QAAQ,GAARA,QAAQ;IALvD,KAAAC,YAAY,GAASN,MAAM;IAClC,KAAAO,QAAQ,GAAC,EAAE;EAOX;EAGAC,gBAAgBA,CAAA;IACd,MAAMC,WAAW,GAAG,IAAIC,IAAI,EAAE;IAC9B;IAEA,OAAO,IAAI,CAACL,QAAQ,CAACM,SAAS,CAACF,WAAW,EAAE,0BAA0B,CAAC;EACzE;EACDG,QAAQA,CAAA;IAEL,IAAI,CAACR,WAAW,CAACS,qBAAqB,EAAE,CAACC,SAAS,CAEhD;MACEC,IAAI,EAAGC,IAAI,IAAG;QAEV,IAAI,CAACT,QAAQ,GAAG,IAAI,CAACH,WAAW,CAACa,MAAM,CAACD,IAAI,CAAC,SAAS,CAAC,CAAC;MAC5D,CAAC;MACDE,KAAK,EAAGC,IAAI,IAAG;QAEXC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MACrB;KACD,CACF;EAEJ;EACAG,eAAeA,CAACC,OAAW;IAExB,IAAI,CAACC,aAAa,GAAG,IAAI,CAAChB,gBAAgB,EAAE;IAC5C,IAAIiB,WAAW,GAAG,IAAIxB,IAAI,CAAC,CAAC,EAAC,IAAI,CAACG,WAAW,CAACsB,MAAM,CAAC,IAAI,CAACnB,QAAQ,CAAC,EAACiB,aAAa;EACpF;EAAC,QAAAG,CAAA,G;qBAvCWzB,4BAA4B,EAAA0B,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,QAAA;EAAA;EAAA,QAAAC,EAAA,G;UAA5BhC,4BAA4B;IAAAiC,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,sCAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCZrCb,EAAA,CAAAe,cAAA,oBAAuH;QAA3Gf,EAAA,CAAAgB,UAAA,gCAAAC,+EAAAC,MAAA;UAAA,OAAsBJ,GAAA,CAAApB,eAAA,CAAAwB,MAAA,CAAuB;QAAA,EAAC;QAA6DlB,EAAA,CAAAmB,YAAA,EAAa;QACpInB,EAAA,CAAAe,cAAA,aAAqG;QAClEf,EAAA,CAAAgB,UAAA,2BAAAI,wEAAAF,MAAA;UAAA,OAAAJ,GAAA,CAAAnC,QAAA,GAAAuC,MAAA;QAAA,EAAsB;QAAClB,EAAA,CAAAmB,YAAA,EAAW;;;QAFVnB,EAAA,CAAAqB,UAAA,0BAAyB;QAEzErB,EAAA,CAAAsB,SAAA,GAAuB;QAAvBtB,EAAA,CAAAqB,UAAA,WAAAP,GAAA,CAAApC,YAAA,CAAuB,YAAAoC,GAAA,CAAAnC,QAAA;;;;;;;SDUzBL,4BAA4B"},"metadata":{},"sourceType":"module","externalDependencies":[]}
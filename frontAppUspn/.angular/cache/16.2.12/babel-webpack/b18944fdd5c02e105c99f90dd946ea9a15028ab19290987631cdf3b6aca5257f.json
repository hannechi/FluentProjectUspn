{"ast":null,"code":"import * as Editor from 'ckeditor5-41.0.0-hx9ric8903g3/build/ckeditor';\nimport { Wiki } from 'src/app/models/Wiki';\nimport Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/wiki.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@ckeditor/ckeditor5-angular\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"../../vitrine/navbar/navbar.component\";\nimport * as i6 from \"../sidebarwiki/sidebarwiki.component\";\nclass AllModificationWikiComponent {\n  constructor(servicewiki, datePipe) {\n    this.servicewiki = servicewiki;\n    this.datePipe = datePipe;\n    this.CustomEditor = Editor;\n    this.datawiki = \"\";\n  }\n  getFormattedDate() {\n    const currentDate = new Date();\n    // Format the date as per your requirement\n    return this.datePipe.transform(currentDate, 'yyyy-MM-ddTHH:mm:ss.SSSZ');\n  }\n  ngOnInit() {\n    this.servicewiki.getdernierversionwiki().subscribe({\n      next: data => {\n        this.datawiki = this.servicewiki.decode(data[\"contenu\"]);\n      },\n      error: errr => {\n        Swal.fire({\n          position: \"top-end\",\n          icon: \"error\",\n          title: \"Something went wrong! try later\",\n          showConfirmButton: false,\n          timer: 1500\n        });\n      }\n    });\n  }\n  saveversionwiki(message) {\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"This version of the wiki will be saved !\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes, save it!\"\n    }).then(result => {\n      if (result.isConfirmed) {\n        this.formattedDate = this.getFormattedDate();\n        let wikiversion = new Wiki(0, this.servicewiki.encode(this.datawiki), this.formattedDate);\n        this.servicewiki.savewikiversion(wikiversion).subscribe({\n          next: data => {\n            Swal.fire({\n              title: \"Saved!\",\n              text: \"Your file has been saved.\",\n              icon: \"success\"\n            });\n          },\n          error: errr => {\n            Swal.fire({\n              position: \"top-end\",\n              icon: \"error\",\n              title: \"Something went wrong! try later\",\n              showConfirmButton: false,\n              timer: 1500\n            });\n          }\n        });\n      }\n    });\n  }\n  static #_ = this.ɵfac = function AllModificationWikiComponent_Factory(t) {\n    return new (t || AllModificationWikiComponent)(i0.ɵɵdirectiveInject(i1.WikiService), i0.ɵɵdirectiveInject(i2.DatePipe));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AllModificationWikiComponent,\n    selectors: [[\"app-all-modification-wiki\"]],\n    decls: 5,\n    vars: 6,\n    consts: [[3, \"modificationwiki\", \"login\", \"vitrine\", \"saveversionwikinow\"], [3, \"enablemodification\"], [\"data-wow-duration\", \"0.75s\", \"data-wow-delay\", \"0s\", 1, \"header-area\", \"header-sticky\", \"wow\", \"slideInDown\"], [\"id\", \"container\", 1, \"container-fluid\"], [3, \"editor\", \"ngModel\", \"ngModelChange\"]],\n    template: function AllModificationWikiComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"app-navbar\", 0);\n        i0.ɵɵlistener(\"saveversionwikinow\", function AllModificationWikiComponent_Template_app_navbar_saveversionwikinow_0_listener($event) {\n          return ctx.saveversionwiki($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(1, \"app-sidebarwiki\", 1)(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"div\", 3)(4, \"ckeditor\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function AllModificationWikiComponent_Template_ckeditor_ngModelChange_4_listener($event) {\n          return ctx.datawiki = $event;\n        });\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"modificationwiki\", true)(\"login\", false)(\"vitrine\", false);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"enablemodification\", true);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"editor\", ctx.CustomEditor)(\"ngModel\", ctx.datawiki);\n      }\n    },\n    dependencies: [i3.CKEditorComponent, i4.NgControlStatus, i4.NgModel, i5.NavbarComponent, i6.SidebarwikiComponent],\n    styles: [\"#container[_ngcontent-%COMP%]\\n{\\n    margin-top: 20px;\\n    margin-left: 300px;\\n    width: 80%;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvd2lraS9hbGwtbW9kaWZpY2F0aW9uLXdpa2kvYWxsLW1vZGlmaWNhdGlvbi13aWtpLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0lBRUksZ0JBQWdCO0lBQ2hCLGtCQUFrQjtJQUNsQixVQUFVO0FBQ2QiLCJzb3VyY2VzQ29udGVudCI6WyIjY29udGFpbmVyXG57XG4gICAgbWFyZ2luLXRvcDogMjBweDtcbiAgICBtYXJnaW4tbGVmdDogMzAwcHg7XG4gICAgd2lkdGg6IDgwJTtcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}\nexport { AllModificationWikiComponent };","map":{"version":3,"names":["Editor","Wiki","Swal","AllModificationWikiComponent","constructor","servicewiki","datePipe","CustomEditor","datawiki","getFormattedDate","currentDate","Date","transform","ngOnInit","getdernierversionwiki","subscribe","next","data","decode","error","errr","fire","position","icon","title","showConfirmButton","timer","saveversionwiki","message","text","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","isConfirmed","formattedDate","wikiversion","encode","savewikiversion","_","i0","ɵɵdirectiveInject","i1","WikiService","i2","DatePipe","_2","selectors","decls","vars","consts","template","AllModificationWikiComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","AllModificationWikiComponent_Template_app_navbar_saveversionwikinow_0_listener","$event","ɵɵelementEnd","ɵɵelement","AllModificationWikiComponent_Template_ckeditor_ngModelChange_4_listener","ɵɵproperty","ɵɵadvance"],"sources":["/home/hannechi/Bureau/uspn_cfd/frontAppUspn/src/app/wiki/all-modification-wiki/all-modification-wiki.component.ts","/home/hannechi/Bureau/uspn_cfd/frontAppUspn/src/app/wiki/all-modification-wiki/all-modification-wiki.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport * as Editor from 'ckeditor5-41.0.0-hx9ric8903g3/build/ckeditor';\nimport { Wiki } from 'src/app/models/Wiki';\nimport { WikiService } from 'src/app/service/wiki.service';\nimport Swal from 'sweetalert2'\nimport { DatePipe } from '@angular/common';\n\n@Component({\n  selector: 'app-all-modification-wiki',\n  templateUrl: './all-modification-wiki.component.html',\n  styleUrls: ['./all-modification-wiki.component.css']\n})\nexport class AllModificationWikiComponent implements OnInit{\n  public CustomEditor : any = Editor;\n  datawiki=\"\";\n  formattedDate: any;\n\n\n  constructor(private servicewiki : WikiService,private datePipe: DatePipe)\n  {\n   \n  }\n\n\n  getFormattedDate(){\n    const currentDate = new Date();\n    // Format the date as per your requirement\n    \n    return this.datePipe.transform(currentDate, 'yyyy-MM-ddTHH:mm:ss.SSSZ');\n  }\n ngOnInit(): void {\n\n    this.servicewiki.getdernierversionwiki().subscribe\n    (\n      {\n        next: (data)=>\n        {\n            this.datawiki = this.servicewiki.decode(data[\"contenu\"]);     \n        },\n        error: (errr)=>\n        {\n          Swal.fire({\n            position: \"top-end\",\n            icon: \"error\",\n            title: \"Something went wrong! try later\",\n            showConfirmButton: false,\n            timer: 1500\n          });\n        }\n      }\n    )\n\n }\n\n saveversionwiki(message:any)\n {\n  Swal.fire({\n    title: \"Are you sure?\",\n    text: \"This version of the wiki will be saved !\",\n    icon: \"warning\",\n    showCancelButton: true,\n    confirmButtonColor: \"#3085d6\",\n    cancelButtonColor: \"#d33\",\n    confirmButtonText: \"Yes, save it!\"\n  }).then((result) => {\n    if (result.isConfirmed) {\n      this.formattedDate = this.getFormattedDate();\n      let wikiversion = new Wiki(0,this.servicewiki.encode(this.datawiki),this.formattedDate);\n      this.servicewiki.savewikiversion(wikiversion).subscribe(\n        {\n          next: (data)=>\n          {\n            Swal.fire({\n              title: \"Saved!\",\n              text: \"Your file has been saved.\",\n              icon: \"success\"\n            });    \n          },\n          error: (errr)=>\n          {\n            Swal.fire({\n              position: \"top-end\",\n              icon: \"error\",\n              title: \"Something went wrong! try later\",\n              showConfirmButton: false,\n              timer: 1500\n            });\n          }\n        }\n      )\n      \n    }\n  });\n   \n }  \n}\n","    \n      <app-navbar (saveversionwikinow)=\"saveversionwiki($event)\" [modificationwiki]=\"true\" [login]=\"false\" [vitrine]=\"false\"></app-navbar>\n<app-sidebarwiki [enablemodification]=\"true\"></app-sidebarwiki>\n  \n    <div class=\"header-area header-sticky wow slideInDown\" data-wow-duration=\"0.75s\" data-wow-delay=\"0s\">\n    </div>\n    <div id=\"container\" class=\"container-fluid\">\n    <ckeditor  [editor]=\"CustomEditor\" [(ngModel)]=\"datawiki\"></ckeditor>\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}